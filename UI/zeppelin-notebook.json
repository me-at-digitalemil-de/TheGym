{"paragraphs":[{"text":"%md\nApp Spark Interpreter property: spark.cassandra.connection.host  node.cassandra.l4lb.thisdcos.directory  \n","dateUpdated":"Jul 20, 2017 5:09:03 PM","config":{"colWidth":12,"editorMode":"ace/mode/markdown","graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1500570543660_-1344284082","id":"20170207-123004_1812708204","result":{"code":"SUCCESS","type":"HTML","msg":"<p>App Spark Interpreter property: spark.cassandra.connection.host  node.cassandra.l4lb.thisdcos.directory</p>\n"},"dateCreated":"Jul 20, 2017 5:09:03 PM","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:1184"},{"text":"%dep\nz.load(\"org.apache.commons:commons-csv:1.2\")\nz.load(\"com.datastax.spark:spark-cassandra-connector_2.10:1.6.4\")","authenticationInfo":{},"dateUpdated":"Jul 20, 2017 5:22:06 PM","config":{"colWidth":12,"editorMode":"ace/mode/scala","graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1500570543662_-1343514585","id":"20170207-123004_947508287","result":{"code":"SUCCESS","type":"TEXT","msg":"DepInterpreter(%dep) deprecated. Load dependency through GUI interpreter menu instead.\nDepInterpreter(%dep) deprecated. Load dependency through GUI interpreter menu instead.\nres0: org.apache.zeppelin.dep.Dependency = org.apache.zeppelin.dep.Dependency@309656d5\n"},"dateCreated":"Jul 20, 2017 5:09:03 PM","dateStarted":"Jul 20, 2017 5:22:06 PM","dateFinished":"Jul 20, 2017 5:22:13 PM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1185","focus":true},{"text":"import com.datastax.spark.connector._\nval hrs = sqlContext\n  .read\n  .format(\"org.apache.spark.sql.cassandra\")\n  .options(Map( \"table\" -> \"hr\", \"keyspace\" -> \"thegym\"))\n  .load()\n  \n  hrs.show()","authenticationInfo":{},"dateUpdated":"Jul 20, 2017 5:22:15 PM","config":{"colWidth":12,"editorMode":"ace/mode/scala","tableHide":true,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1500570543662_-1343514585","id":"20170207-123004_1224558699","result":{"code":"SUCCESS","type":"TEXT","msg":"import com.datastax.spark.connector._\nhrs: org.apache.spark.sql.DataFrame = [id: bigint, color: string, deviceid: string, event_timestamp: string, heartrate: int, location: string, user: string]\n+-------------+--------------------+--------+--------------------+---------+--------------------+------+\n|           id|               color|deviceid|     event_timestamp|heartrate|            location|  user|\n+-------------+--------------------+--------+--------------------+---------+--------------------+------+\n|1500571194092|          0x80FFFFFF|   17445|2017-07-20T17:19:...|      102|32.7152778,-117.1...|Travis|\n|1500571053673|          0x80FFFFFF|   16380|2017-07-20T17:17:...|      110| 37.775,-122.4183333|   Flo|\n|1500570661513|          0x80FFFFFF|   20452|2017-07-20T17:11:...|      153|34.0522342,-118.2...|  Tony|\n|1500570669541|          0x80FFFFFF|   20452|2017-07-20T17:11:...|      159|34.0522342,-118.2...|  Tony|\n|1500570197073|<html><head><titl...|   12444|2017-07-20T17:03:...|      146|43.479929,-110.76...| James|\n|1500570292353|<html><head><titl...|   16453|2017-07-20T17:04:...|      120|41.850033,-87.650...|   Tim|\n|1500570465857|<html><head><titl...|   14321|2017-07-20T17:07:...|      133|37.4419444,-122.1...|  Tobi|\n|1500570687592|          0x80FFFFFF|   20452|2017-07-20T17:11:...|      151|34.0522342,-118.2...|  Tony|\n|1500570504989|          0x80FFFFFF|   16453|2017-07-20T17:08:...|      129|41.850033,-87.650...|   Tim|\n|1500571299395|          0x8000FF00|   19201|2017-07-20T17:21:...|      100|42.3584308,-71.05...| Jamie|\n|1500570657497|          0x80FFFFFF|   20452|2017-07-20T17:10:...|      158|34.0522342,-118.2...|  Tony|\n|1500570361553|<html><head><titl...|   14321|2017-07-20T17:06:...|      132|37.4419444,-122.1...|  Tobi|\n|1500570444798|<html><head><titl...|   15121|2017-07-20T17:07:...|       92|    44.7694,-106.969|   Ben|\n|1500571175048|          0x80FFFFFF|   20452|2017-07-20T17:19:...|      154|34.0522342,-118.2...|  Tony|\n|1500570774853|          0x80FFFFFF|   15121|2017-07-20T17:12:...|       85|    44.7694,-106.969|   Ben|\n|1500570607280|          0x80FFFFFF|   20452|2017-07-20T17:10:...|      150|34.0522342,-118.2...|  Tony|\n|1500570207105|<html><head><titl...|   12444|2017-07-20T17:03:...|      155|43.479929,-110.76...| James|\n|1500570977465|          0x80FFFFFF|   19201|2017-07-20T17:16:...|      107|42.3584308,-71.05...| Jamie|\n|1500571030603|          0x80FFFFFF|   14321|2017-07-20T17:17:...|      133|37.4419444,-122.1...|  Tobi|\n|1500571244238|          0x80FFFFFF|   14321|2017-07-20T17:20:...|      142|37.4419444,-122.1...|  Tobi|\n+-------------+--------------------+--------+--------------------+---------+--------------------+------+\nonly showing top 20 rows\n\n"},"dateCreated":"Jul 20, 2017 5:09:03 PM","dateStarted":"Jul 20, 2017 5:22:15 PM","dateFinished":"Jul 20, 2017 5:22:30 PM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1186","focus":true},{"text":"hrs.registerTempTable(\"hr\");\nval df= sqlContext.sql(\"Select heartrate, deviceid, user from hr\")\ndf.show();","authenticationInfo":{},"dateUpdated":"Jul 20, 2017 5:22:42 PM","config":{"colWidth":12,"editorMode":"ace/mode/scala","tableHide":true,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1500570543662_-1343514585","id":"20170207-123004_1613759481","result":{"code":"SUCCESS","type":"TEXT","msg":"df: org.apache.spark.sql.DataFrame = [heartrate: int, deviceid: string, user: string]\n+---------+--------+------+\n|heartrate|deviceid|  user|\n+---------+--------+------+\n|      102|   17445|Travis|\n|      110|   16380|   Flo|\n|      153|   20452|  Tony|\n|      159|   20452|  Tony|\n|      146|   12444| James|\n|      120|   16453|   Tim|\n|      133|   14321|  Tobi|\n|      151|   20452|  Tony|\n|      129|   16453|   Tim|\n|      100|   19201| Jamie|\n|      158|   20452|  Tony|\n|      132|   14321|  Tobi|\n|       92|   15121|   Ben|\n|      154|   20452|  Tony|\n|       85|   15121|   Ben|\n|      150|   20452|  Tony|\n|      155|   12444| James|\n|      107|   19201| Jamie|\n|      133|   14321|  Tobi|\n|      142|   14321|  Tobi|\n+---------+--------+------+\nonly showing top 20 rows\n\n"},"dateCreated":"Jul 20, 2017 5:09:03 PM","dateStarted":"Jul 20, 2017 5:22:42 PM","dateFinished":"Jul 20, 2017 5:22:46 PM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1187","focus":true},{"text":"import scala.collection.Map\r\nval limits = Map(\"Flo\" -> 120, \"Tobi\" -> 120, \"Ben\" -> 120, \"Travis\" -> 120, \"James\" -> 120, \"Tim\" -> 120, \"Jamie\" -> 120, \"Tony\" -> 120, \"Joerg\" -> 120, \"Jan\" -> 120, \"Ferdi\" -> 120, \"John\"->120)\r\nval toLabel = (l: Int, v:Long) => if (v > l) 1 else 0 \r\nval deviceAndHRAndLimit = df.map(r => (r.getString(1).toInt, r.getInt(0), toLabel(limits.getOrElse(r.getString(2), 120), r.getInt(0)), r.getString(2)))","authenticationInfo":{},"dateUpdated":"Jul 20, 2017 5:23:01 PM","config":{"colWidth":12,"editorMode":"ace/mode/scala","graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1500570543663_-1343899334","id":"20170207-123004_1330189149","dateCreated":"Jul 20, 2017 5:09:03 PM","dateStarted":"Jul 20, 2017 5:23:01 PM","dateFinished":"Jul 20, 2017 5:23:03 PM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1188","errorMessage":"","focus":true},{"text":"import org.apache.spark.mllib.util\r\nimport org.apache.spark.mllib\r\nimport org.apache.spark.mllib.tree.DecisionTree\r\nimport org.apache.spark.mllib.tree.model.DecisionTreeModel\r\nimport org.apache.spark.mllib.regression.LabeledPoint\r\nimport org.apache.spark.mllib.linalg.{Vector, Vectors}\r\n\r\nval numClasses = 2\r\nval categoricalFeaturesInfo = Map[Int, Int]()\r\nval impurity = \"gini\"\r\nval maxDepth = 5\r\nval maxBins = 32\r\n\r\nval splits = deviceAndHRAndLimit.map(tuple => LabeledPoint(tuple._3, Vectors.dense(tuple._1, tuple._2)))\r\n                              .randomSplit(Array(0.6, 0.4), seed = 11L)\r\n\r\nval (training, test) = (splits(0).cache(), splits(1))","authenticationInfo":{},"dateUpdated":"Jul 20, 2017 5:23:11 PM","config":{"colWidth":12,"tableHide":true,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1500570543663_-1343899334","id":"20170207-123004_971505319","dateCreated":"Jul 20, 2017 5:09:03 PM","dateStarted":"Jul 20, 2017 5:23:11 PM","dateFinished":"Jul 20, 2017 5:23:13 PM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1189","errorMessage":"","focus":true},{"text":"import org.apache.spark.mllib.classification.{LogisticRegressionModel, LogisticRegressionWithLBFGS}\nimport org.apache.spark.mllib.evaluation.MulticlassMetrics\nimport org.apache.spark.mllib.regression.LabeledPoint\nimport org.apache.spark.mllib.util.MLUtils\n\nval model = new LogisticRegressionWithLBFGS().setNumClasses(2).run(training)","authenticationInfo":{},"dateUpdated":"Jul 20, 2017 5:23:34 PM","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1500570543664_-1333511113","id":"20170207-123004_2067050685","dateCreated":"Jul 20, 2017 5:09:03 PM","dateStarted":"Jul 20, 2017 5:23:34 PM","dateFinished":"Jul 20, 2017 5:23:46 PM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1190","errorMessage":"","focus":true},{"text":"val predictionsAndLabels = test.map { case LabeledPoint(label, features) =>\r\n  val prediction = model.predict(features)\r\n  (prediction, label)\r\n}\r\n\r\npredictionsAndLabels.collect()","authenticationInfo":{},"dateUpdated":"Jul 20, 2017 5:23:52 PM","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1500570543664_-1333511113","id":"20170207-123004_1682928173","dateCreated":"Jul 20, 2017 5:09:03 PM","dateStarted":"Jul 20, 2017 5:23:52 PM","dateFinished":"Jul 20, 2017 5:23:58 PM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1191","errorMessage":"","focus":true},{"text":"import org.apache.spark.mllib.evaluation.MulticlassMetrics\r\nval metrics = new MulticlassMetrics(predictionsAndLabels)\r\nval pmml= model.toPMML.replace(\"field_0\", \"deviceid\").replace(\"field_1\", \"heartrate\")\r\nprintln(\"\\nCopy this:\\n--- start ---\\n\"+pmml)\r\nprintln(\"---- end ----\")\r\n","authenticationInfo":{},"dateUpdated":"Jul 20, 2017 5:25:44 PM","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1500570543664_-1333511113","id":"20170207-123004_2061913214","dateCreated":"Jul 20, 2017 5:09:03 PM","dateStarted":"Jul 20, 2017 5:25:44 PM","dateFinished":"Jul 20, 2017 5:25:45 PM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1192","errorMessage":"","focus":true},{"dateUpdated":"Jul 20, 2017 5:09:03 PM","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1500570543665_-1333895862","id":"20170207-123004_1922181598","dateCreated":"Jul 20, 2017 5:09:03 PM","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:1194"}],"name":"The Gym","id":"2CR9MRZM4","angularObjects":{"2CMK514FG:shared_process":[],"2CPKG5BKE:shared_process":[],"2CQGKYMEE:shared_process":[],"2CP38WAR9:shared_process":[],"2CMJWHHVC:shared_process":[],"2CMS3PVQ6:shared_process":[],"2CMRJSGEA:shared_process":[],"2CN6VQ6ND:shared_process":[],"2CPRBXCD2:shared_process":[],"2CNW29GH5:shared_process":[],"2CRGCWVX3:shared_process":[],"2CRF95UG1:shared_process":[],"2CPS6QPEN:shared_process":[],"2CQCP8Y1A:shared_process":[],"2CPWFKX3M:shared_process":[],"2CNDV8KYB:shared_process":[],"2CNZE2H5T:shared_process":[],"2CNGK83M2:shared_process":[]},"config":{"looknfeel":"default"},"info":{}}